
blueprint:
  name: WUnderground upload PM2.5
  description: >
    Upload data from Home Assistant to WUnderground.

  domain: automation
  source_url: "https://github.com/dvandonkelaar/home-assistant-blueprints/raw/main/wunderground_upload.yaml"
  input:
    station_id:
      name: Station ID
      default: ''
    station_key:
      name: Station key
      default: ''
    sensor_baro:
      name: Barometer sensor
      selector:
        entity:
          domain: sensor
      default: ''
    sensor_temp:
      name: Temperature sensor
      selector:
        entity:
          domain: sensor
          device_class: temperature
      default: ''
    sensor_dewpt:
      name: Dew point sensor
      selector:
        entity:
          domain: sensor
      default: ''
    calculate_dewpt:
      name: Calculate dewpoint
      description:
        Dewpoint calculation is only possible if the outdoor temperature and outdoor humidity sensor are available.
      selector:
        boolean:
      default: true
    sensor_humidity:
      name: Humidity sensor
      selector:
        entity:
          domain: sensor
          device_class: humidity
      default: ''
    sensor_windspeed:
      name: Wind speed sensor
      selector:
        entity:
          domain: sensor
      default: ''
    sensor_windgust:
      name: Wind gust sensor
      selector:
        entity:
          domain: sensor
      default: ''
    sensor_winddir:
      name: Wind direction sensor
      selector:
        entity:
          domain: sensor
      default: ''
    sensor_rain:
      name: Rain sensor
      selector:
        entity:
          domain: sensor
      default: ''
    sensor_dailyrain:
      name: Daily rain sensor
      selector:
        entity:
          domain: sensor
      default: ''
    sensor_indoortemp:
      name: Indoor temperature sensor
      selector:
        entity:
          domain: sensor
          device_class: temperature
      default: ''
    sensor_indoorhumidity:
      name: Indoor humidity sensor
      selector:
        entity:
          domain: sensor
          device_class: humidity
      default: ''
    sensor_AqPM2.5:
      name: AqPM2.5
      selector:
        entity:
          domain: sensor
      default: ''      
    refresh_frequency:
      name: Refresh frequency (seconds)
      selector:
        number:
          min: 1
          max: 10800
          step: 1
          unit_of_measurement: seconds
    trigger_entities:
      name: Trigger entities
      selector:
        entity:
      default: ''
    curl_command_service:
      name: CURL command service
      selector:
        text:
      default: ''
    delay:
      name: Delay after publishing results
      selector:
        number:
          min: 0
          max: 10800
          step: 1
          unit_of_measurement: seconds
      default: 10

mode: single
max_exceeded: silent

trigger:
  - platform: state
    entity_id: !input trigger_entities

variables:
  station_id: !input station_id
  station_key: !input station_key
  sensor_baro: !input sensor_baro
  sensor_temp: !input sensor_temp
  sensor_dewpt: !input sensor_dewpt
  calculate_dewpt: !input calculate_dewpt
  sensor_humidity: !input sensor_humidity
  sensor_windspeed: !input sensor_windspeed
  sensor_windgust: !input sensor_windgust
  sensor_winddir: !input sensor_winddir
  sensor_rain: !input sensor_rain
  sensor_dailyrain: !input sensor_dailyrain
  sensor_indoortemp: !input sensor_indoortemp
  sensor_indoorhumidity: !input sensor_indoorhumidity
  sensor_AqPM2.5: !input sensor_AqPM2.5
  rtfreq: !input refresh_frequency
  delay: !input delay
  baromin: >
    {% set unit_of_measurement = state_attr(sensor_baro, 'unit_of_measurement') %}
    {{ sensor_baro if sensor_baro == '' and unit_of_measurement not in ['mbar', 'hPa']
        else ((states(sensor_baro) | float(default=0)) / 33.8639) }}
  tempf: >
    {% set unit_of_measurement = state_attr(sensor_temp, 'unit_of_measurement') %}
    {{ sensor_temp if sensor_temp == ''
        else ((states(sensor_temp) | float(default=0)) if unit_of_measurement == '째F'
          else ((states(sensor_temp) | float(default=0)) * 1.8) + 32) }}
  humidity: >
    {{ sensor_humidity if sensor_humidity == '' else (states(sensor_humidity) | float(default=0)) }}
  windspeedmph: >
    {% set unit_of_measurement = state_attr(sensor_windspeed, 'unit_of_measurement') %}
    {{ sensor_windspeed if sensor_windspeed == '' or unit_of_measurement != 'km/h'
        else ((states(sensor_windspeed) | float(default=0)) * 0.6213) }}
  windgustmph: >
    {% set unit_of_measurement = state_attr(sensor_windgust, 'unit_of_measurement') %}
    {{ sensor_windgust if sensor_windgust == '' or unit_of_measurement != 'km/h'
        else ((states(sensor_windgust) | float(default=0)) * 0.6213) }}
  winddir: >
    {{ sensor_winddir if sensor_winddir == ''
        else (states(sensor_winddir) | float(default=0)) }}
  rainin: >
    {% set unit_of_measurement = state_attr(sensor_rain, 'unit_of_measurement') %}
    {{ sensor_rain if sensor_rain == ''
        else ((states(sensor_rain) | float(default=0)) / 25.4 if unit_of_measurement == 'mm' else 1) }}
  dailyrainin: >
    {% set unit_of_measurement = state_attr(sensor_dailyrain, 'unit_of_measurement') %}
    {{ sensor_dailyrain if sensor_dailyrain == ''
        else ((states(sensor_dailyrain) | float(default=0)) / 25.4 if unit_of_measurement == 'mm' else 1) }}
  indoortempf: >
    {% set unit_of_measurement = state_attr(sensor_indoortemp, 'unit_of_measurement') %}
    {{ sensor_indoortemp if sensor_indoortemp == ''
        else ((states(sensor_indoortemp) | float(default=0)) if unit_of_measurement == '째F'
          else ((states(sensor_indoortemp) | float(default=0)) * 1.8) + 32) }}
  indoorhumidity: >
    {{ sensor_indoorhumidity if sensor_indoorhumidity == ''
        else (states(sensor_indoorhumidity) | float(default=0)) }}
  AqPM2.5: >
    {{ sensor_AqPM2.5 if sensor_AqPM2.5 == ''
        else (states(sensor_AqPM2.5) | float(default=0)) }}        
  dewptf_calculated: >
    {% set unit_of_measurement = state_attr(sensor_temp, 'unit_of_measurement') %}
    {% set T = ((states(sensor_temp) | float(default=0)) if unit_of_measurement == '째C'
                else ((states(sensor_temp) | float(default=0)) - 32) / 1.8) %}
    {% set RH = humidity %}
    {% set dewpt = '' %}
    {% if sensor_temp != '' and sensor_humidity != '' %}
      {% set A = log(RH / 100, default=0.0) + (17.62 * T / (243.12 + T)) %}
      {% set dewpt = 243.12 * A / (17.62 - A) %}
      {% set dewpt = (dewpt * 1.8) + 32 %}
    {% endif %}
    {{ dewpt }}
  dewptf: >
    {% set unit_of_measurement = state_attr(sensor_dewpt, 'unit_of_measurement') %}
    {{ (dewptf_calculated if calculate_dewpt is true
        else sensor_dewpt) if sensor_dewpt == ''
          else ((states(sensor_dewpt) | float(default=0)) if unit_of_measurement == '째F'
            else ((states(sensor_dewpt) | float(default=0)) * 1.8) + 32) }}
  payload: >
    {% set data = namespace(sensors=[]) %}

    {% for i in [['rtfreq', rtfreq]
          ,['baromin', baromin]
          ,['tempf', tempf]
          ,['dewptf', dewptf]
          ,['humidity', humidity]
          ,['windspeedmph', windspeedmph]
          ,['windgustmph', windgustmph]
          ,['winddir', winddir]
          ,['rainin', rainin]
          ,['dailyrainin', dailyrainin]
          ,['indoortempf', indoortempf]
          ,['indoorhumidity', indoorhumidity]
          ,['AqPM2.5', AqPM2.5]
          ]%}
      {% if i[1] != '' %}
        {% set data.sensors= data.sensors + ['{}={}'.format(i[0], (i[1] if i[0] == 'rtfreq'
                                              else (i[1] | round(3)) | string))] %}
      {% endif %}
    {% endfor %}

    {% set _payload = 'ID=' + station_id %}
    {% set _payload = _payload + '&PASSWORD=' + station_key %}
    {% set _payload = _payload + '&action=updateraww' %}
    {% set _payload = _payload + '&realtime=1' %}
    {% set _payload = _payload + '&dateutc=now' %}
    {% set _payload = _payload + '&' if data.sensors | length > 0 else '' %}
    {% set _payload = _payload + data.sensors | join('&') %}
    {{ _payload }}

action:
  - alias: "Check if station_id and station_key exist"
    if: >
      {{      station_id != ''
          and station_key != ''
      }}
    then:
      - service: !input curl_command_service
        data:
          url: "https://weatherstation.wunderground.com/weatherstation/updateweatherstation.php?{{ payload }}"
  - alias: "Wait to prevent multiple uploads"
    delay:
      seconds: "{{ delay | int }}"
